<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>